#include "qtcommon.h"
#include "translatewrapper.h"
#include "network.h"
#include "md5.h"

extern const wchar_t* TRANSLATION_ERROR;

const char* TRANSLATION_PROVIDER = "Baidu Translate";
const char* GET_API_KEY_FROM = "https://fanyi-api.baidu.com/";
extern const QStringList languagesTo{
"Aceh",
"Afrikaans",
"Albanian",
"Algerian Arabic",
"Amharic",
"Ancient Greek",
"Arabic",
"Aragonese",
"Arkon",
"Armenian",
"Assamese",
"Asturian",
"Aymara",
"Azerbaijani",
"Balochi",
"Bashkir",
"Basque",
"Belarusian",
"Bemba",
"Bengali",
"Berber",
"Bhojpuri",
"Billin",
"Bislama language",
"Bosnian",
"Brazilian Portuguese",
"Breton",
"Bulgarian",
"Burmese",
"Canadian French",
"Catalan",
"Cebuano",
"Cherokee",
"Chevi language",
"Chinese (Cantonese)",
"Chinese (Simplified)",
"Chinese (Traditional)",
"Chinese (Wenyan)",
"Chuvash",
"Cornish",
"Corsican",
"Crick language",
"Crimean Tatar",
"Croatian",
"Czech",
"Danish",
"Dhivehi",
"Dutch",
"English",
"Esperanto",
"Estonian",
"Faroese",
"Filipino",
"Finnish",
"French",
"Friulian",
"Fulani language",
"FYRO Macedonian",
"Gaelic",
"Galician",
"Georgian",
"German",
"Greek",
"Greenlandic",
"Guarani",
"Gujarati",
"Haitian",
"Hakachin",
"Hausa",
"Hawaiian",
"Hebrew",
"Heliganon",
"Highland Sorbian language",
"Hindi",
"Hmong language",
"Hoopa",
"Hungarian",
"Icelandic",
"Ido",
"Igbo",
"Indonesian",
"Ingush",
"Inter",
"Inuktitut",
"Iranian",
"Irish",
"Italian",
"Japanese",
"Javanese",
"Kabyle language",
"Kannada",
"Kanuri",
"Kashmiri",
"Kashubian",
"Khmer",
"Kinyarwanda",
"Klingon",
"Kongo",
"Konkani",
"Korean",
"Kurdish",
"Kyrgyz",
"Lao",
"Latgalay",
"Latin",
"Latvian",
"Limburg language",
"Lingala",
"Lithuanian",
"Logic language",
"Low German",
"Lower Sorbian language",
"Luganda",
"Luxembourgish",
"Maithili",
"Malagas",
"Malay",
"Malayalam",
"Maltese",
"Manx",
"Māori",
"Marathi",
"Marshallese",
"Mauritian Creole",
"Middle French",
"Montenegrin",
"Neapolitan language",
"Nepali",
"Northern Sámi",
"Northern Sotho",
"Norwegian Bokm?l",
"Norwegian Nynorsk",
"Norwegian",
"Occitan",
"Ojebwa",
"Old English",
"Oriya",
"Oromo language",
"Ossetian",
"Pampangya",
"Papiamento",
"Pashto",
"Persian",
"Polish",
"Portuguese",
"Punjabi",
"Quechua",
"Romani language",
"Romanian",
"Romansh",
"Rusenian",
"Russian",
"Samoan",
"Sanskrit",
"Sardinian",
"Satoga language",
"Serbian (Cyrillic)",
"Serbian",
"Serbo-Croatian",
"Shan",
"Shuna language",
"Silesian",
"Sindhi",
"Sinhalese",
"Slovak",
"Slovenian",
"Somali",
"Songhai",
"South Ndebele",
"Southern Sotho",
"Spanish",
"Sundanese",
"Swahili",
"Swedish",
"Syriac",
"Tagalog",
"Tajik",
"Tamil",
"Tatar",
"Telugu",
"Tetum",
"Thai",
"Tigrinya",
"Tsiceva",
"Tunisian Spoken Arabic",
"Turkish",
"Turkmen",
"Ukrainian",
"Urdu",
"Venda",
"Vietnamese",
"Walloon",
"Welsh",
"West African written language",
"West Vrisian",
"Wolof",
"Xhosa",
"Yiddish",
"Yoruba",
"Zazachi",
"Zulu"
}
, languagesFrom = languagesTo;
extern const std::unordered_map<std::wstring, std::wstring> codes
{
	{L"Arabic",L"ara"},
	{L"Albanian",L"alb"},
	{L"Aragonese",L"arg"},
	{L"Aymara",L"aym"},
	{L"Ossetian",L"oss"},
	{L"Oriya",L"ori"},
	{L"Polish",L".pl"},
	{L"Bashkir",L".bak"},
	{L"Belarusian",L"bel"},
	{L"Bulgarian",L"bul"},
	{L"Bemba",L"bem"},
	{L"Balochi",L"bal"},
	{L"Bhojpuri",L"bho"},
	{L"Chuvash",L"chv"},
	{L"Danish",L"dan"},
	{L"Shan",L"sha"},
	{L"Low German",L".log"},
	{L"Russian",L"ru"},
	{L"French",L"fra"},
	{L"Sanskrit",L"san"},
	{L"Faroese",L"fao"},
	{L"Gaelic",L"gla"},
	{L"Khmer",L"hkm"},
	{L"Gujarati",L"guj"},
	{L"Guarani",L"grn"},
	{L"Korean",L"kor"},
	{L"Hakachin",L"hak"},
	{L"Hausa",L"hau"},
	{L"Kyrgyz",L"kir"},
	{L"Catalan",L"cat"},
	{L"Kabyle language",L"kab"},
	{L"Kashubian",L"kah"},
	{L"Corsican",L"cos"},
	{L"Klingon",L"kli"},
	{L"Kashmiri",L"kas"},
	{L"Latin",L"lat"},
	{L"Latgalay",L"lag"},
	{L"Lingala",L"lin"},
	{L"Rusenian",L"ruy"},
	{L"Romansh",L"roh"},
	{L"Malay",L"may"},
	{L"Malagas",L"mg"},
	{L"Marshallese",L"mah"},
	{L"Mauritian Creole",L"mau"},
	{L"Maltese",L"mlt"},
	{L"Norwegian",L"nor"},
	{L"Afrikaans",L"afr"},
	{L"Portuguese",L"pt"},
	{L"Pashto",L"pus"},
	{L"Tsiceva",L"nya"},
	{L"Japanese",L"jp"},
	{L"Sardinian",L"srd"},
	{L"Serbian",L"srp"},
	{L"Esperanto",L"epo"},
	{L"Slovenian",L"slo"},
	{L"Somali",L"som"},
	{L"Thai",L"th"},
	{L"Tamil",L"tam"},
	{L"Telugu",L"tel"},
	{L"Ukrainian",L"ukr"},
	{L"Venda",L"ven"},
	{L"Spanish",L"spa"},
	{L"Hungarian",L"hu"},
	{L"Heliganon",L"hil"},
	{L"Norwegian Nynorsk",L"nno"},
	{L"Shuna language",L"sna"},
	{L"Sundanese",L"sun"},
	{L"English",L"en"},
	{L"Italian",L"it"},
	{L"Inter",L"ina"},
	{L"Igbo",L"ibo"},
	{L"Armenian",L"arm"},
	{L"Chinese (Simplified)",L"zh"},
	{L"Chinese (Cantonese)",L"yue"},
	{L"Zulu",L"zul"},
	{L"Irish",L"gle"},
	{L"Algerian Arabic",L"arq"},
	{L"Amharic",L"amh"},
	{L"Azerbaijani",L"aze"},
	{L"Estonian",L"est"},
	{L"Oromo language",L"orm"},
	{L"Persian",L"per"},
	{L"Basque",L"baq"},
	{L"Berber",L"ber"},
	{L"Northern Sámi",L"sme"},
	{L"Billin",L"bli"},
	{L"Icelandic",L"ice"},
	{L"Satoga language",L"tso"},
	{L"German",L"de"},
	{L"Tetum",L"tet"},
	{L"Filipino",L"fil"},
	{L"Friulian",L"fri"},
	{L"Kongo",L"kon"},
	{L"Greenlandic",L"kal"},
	{L"Ancient Greek",L"gra"},
	{L"Dutch",L"nl"},
	{L"Haitian",L"ht"},
	{L"Galician",L"glg"},
	{L"Czech",L".cs"},
	{L"Kannada",L"kan"},
	{L"Cornish",L"cor"},
	{L"Crick language",L"cre"},
	{L"Croatian",L"hrv"},
	{L"Konkani",L"kok"},
	{L"Lao",L"lao"},
	{L"Latvian",L"lav"},
	{L"Luganda",L"lug"},
	{L"Kinyarwanda",L"kin"},
	{L"Romani language",L"ro"},
	{L"Burmese",L"bur"},
	{L"Malayalam",L"mal"},
	{L"Maithili",L"mai"},
	{L"Māori",L"mao"},
	{L"Hmong language",L"hmn"},
	{L"Neapolitan language",L"nea"},
	{L"Southern Sotho",L"sot"},
	{L"Punjabi",L"pan"},
	{L"Chevi language",L"twi"},
	{L"Swedish",L"swe"},
	{L"Samoan",L"sm"},
	{L"Songhai",L"sol"},
	{L"Norwegian Bokmål",L"nob"},
	{L"Swahili",L"swa"},
	{L"Turkish",L"tr"},
	{L"Tagalog",L"tgl"},
	{L"Tunisian Spoken Arabic",L"tua"},
	{L"Walloon",L"wln"},
	{L"Wolof",L"wol"},
	{L"Hebrew",L"heb"},
	{L"West Vrisian",L"fry"},
	{L"Lower Sorbian language",L"los"},
	{L"West African written language",L"nqo"},
	{L"Cebuano",L"ceb"},
	{L"Hindi",L"hi"},
	{L"Vietnamese",L"vie"},
	{L"Aceh",L"ach"},
	{L"Ido",L"ido"},
	{L"Inuktitut",L"iku"},
	{L"Chinese (Traditional)",L"cht"},
	{L"Zazachi",L"zaz"},
	{L"Javanese",L"jav"},
	{L"Occitan",L"oci"},
	{L"Arkon",L"aka"},
	{L"Assamese",L"asm"},
	{L"Asturian",L"ast"},
	{L"Ojebwa",L"oji"},
	{L"Breton",L"bre"},
	{L"Brazilian Portuguese",L"pot"},
	{L"Pampangya",L"pam"},
	{L"Northern Sotho",L"ped"},
	{L"Bislama language",L"bis"},
	{L"Bosnian",L"bos"},
	{L"Tatar",L"tat"},
	{L"Dhivehi",L"div"},
	{L"Finnish",L"fin"},
	{L"Fulani language",L"ful"},
	{L"Highland Sorbian language",L"ups"},
	{L"Georgian",L"geo"},
	{L"Old English",L"eno"},
	{L"Hoopa",L"hup"},
	{L"Montenegrin",L"mot"},
	{L"Canadian French",L"frn"},
	{L"Kanuri",L"kau"},
	{L"Xhosa",L"xho"},
	{L"Crimean Tatar",L"cri"},
	{L"Quechua",L"que"},
	{L"Kurdish",L"kur"},
	{L"Romanian",L".rom"},
	{L"Limburg language",L"lim"},
	{L"Luxembourgish",L"ltz"},
	{L"Lithuanian",L"lit"},
	{L"Logic language",L"loj"},
	{L"Marathi",L"mar"},
	{L"FYRO Macedonian",L"mac"},
	{L"Manx",L"glv"},
	{L"Bengali",L"ben"},
	{L"South Ndebele",L"nbl"},
	{L"Nepali",L"nep"},
	{L"Papiamento",L"pap"},
	{L"Cherokee",L"chr"},
	{L"Serbo-Croatian",L"sec"},
	{L"Sinhalese",L"sin"},
	{L"Slovak",L"sk"},
	{L"Serbian (Cyrillic)",L"src"},
	{L"Tajik",L"tgk"},
	{L"Tigrinya",L"tir"},
	{L"Turkmen",L"tuk"},
	{L"Welsh",L"wel"},
	{L"Urdu",L"urd"},
	{L"Greek",L"el"},
	{L"Silesian",L"sil"},
	{L"Hawaiian",L"haw"},
	{L"Sindhi",L"snd"},
	{L"Syriac",L"syr"},
	{L"Indonesian",L"id"},
	{L"Yiddish",L"yid"},
	{L"Ingush",L"ing"},
	{L"Yoruba",L"yor"},
	{L"Iranian",L"ir"},
	{L"Chinese (Wenyan)",L"wyw"},
	{L"Middle French",L"frm"},
	{L"?",L"auto"}
};
bool translateSelectedOnly = true, useRateLimiter = true, rateLimitSelected = true, useCache = true, useFilter = true;
int tokenCount = 30, rateLimitTimespan = 60000, maxSentenceSize = 1000;

enum KeyType { CAT, REST };
int keyType = REST;

std::pair<bool, std::wstring> Translate(const std::wstring& text, TranslationParam tlp)
{
	if (!tlp.authKey.empty()){
		std::wstring translateFromComponent;
		std::wstring escaped_text=Escape(text);
		std::wstring salt = L"ACGN";
		size_t pos = tlp.authKey.find(',');
		std::wstring appid=tlp.authKey.substr(0, pos);
		std::wstring secretkey = tlp.authKey.substr(pos+1);
		std::string body = FormatString("to=%S&from=%S&q=%S&appid=%S&salt=%S&sign=%s", codes.at(tlp.translateTo), codes.at(tlp.translateFrom), escaped_text,appid , salt, md5(WideStringToString(appid + text + salt + secretkey)));
		if (HttpRequest httpRequest{
			L"Mozilla/5.0 Textractor",
			L"fanyi-api.baidu.com",
			L"POST",
			L"/api/trans/vip/translate?to=%S&from=%S",
			body,
			L"Content-Type: application/x-www-form-urlencoded"		}
		)
			if (httpRequest.response.find(L"trans_result") != std::string::npos)
				return { true, Copy(JSON::Parse(httpRequest.response)[L"trans_result"][0][L"dst"].String()).value() };
			else return { false, FormatString(L"%s: %s,%s", TRANSLATION_ERROR, httpRequest.response,StringToWideString(body)) };
		else return { false, FormatString(L"%s (code=%u)", TRANSLATION_ERROR, httpRequest.errorCode) };
	}
	return {false,L"public baidu translate has not supported now, please enter apikey in the format of appid,secretkey"};
}
